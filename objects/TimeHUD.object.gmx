<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clockAngle = 0;
currentTime = 0;
dayTime = 1;
nightTime = 1;

state = TimeState.DAY;

daySong = DaySong;
nightSong = NightSong;

audio_stop_sound(daySong);
audio_stop_sound(nightSong);

currentSong = audio_play_sound(daySong, 0, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentTime += 1;
if (state == TimeState.DAY) {
    if (currentTime &gt; dayTime * room_speed) {
        if (instance_exists(Hero)) {
            with (Hero) {
                MorphToWolf();
            }
        }
    }
} else if (state == TimeState.NIGHT) {
    if (currentTime &gt; nightTime * room_speed) {
        state = TimeState.OVER;
        clockAngle = 0;
        var wolf = instance_find(Werewolf, 0);
        if (wolf.kills &gt; 0) {
            with (gunmanSpawner) {
                event_user(0);
            }
        } else {
            audio_stop_sound(daySong);
            audio_stop_sound(nightSong);
            room_goto_next();
        }
    }    
}

if (state != TimeState.OVER) {
    var angleOffset;
    if (state == TimeState.DAY) angleOffset = 180 * (currentTime / (dayTime * room_speed));
    else angleOffset = 180 * (currentTime / (nightTime * room_speed));
    
    var targetAngle = 180 * state + angleOffset;
    clockAngle += min(targetAngle - clockAngle, 5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var screenMiddle = view_wview[0] / 2;
var screenBottom = view_hview[0];

draw_sprite(TimeBgS, 0, screenMiddle, screenBottom);
draw_sprite_ext(TimeBgFilledS, 0, screenMiddle, screenBottom - 26, 1, 1, clockAngle, c_white, 1);
draw_sprite(TimeHUDS, 0, screenMiddle, screenBottom);

if (state == TimeState.OVER) {
    draw_set_font(NormalFont);
    draw_set_halign(fa_center);
    draw_set_color(c_white);
    draw_text(view_wview[0] / 2, view_hview[0], "'R'키를 눌러 재시작합니다.");
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
